--[[
    K        
   / \
  /   \
 /     \
|   |   |
|   |   |
 \     /
  \   /
    E
    S
    T

]]

local printc = {
	"    K      ",
	"   / \\    ",
	"  /   \\   ",
	" /     \\  ",
	"|   |   |  ",
	"|   |   |  ",
	" \\     /  ",
	"  \\   /   ",
	"    E      ",
	"    S      ",
	"    T      "
}

for _, line in ipairs(printc) do
	print(line)
end

--//[START OF MAIN SCRIPT]\\--

--//[BOOLEAN TO BREAK LOOP]\\--
local allTexturesDestroyed = false
local allMaterialsChanged = false
--//[WAIT TILL GAME IS LOADED]\\--
if (not game:IsLoaded()) then
	game.Loaded:Wait();
	wait(1.5)
end
--//[CREDIT]\\--
game.StarterGui:SetCore("SendNotification", {
	Title = "Anti-lag";
	Text = "Made by Kaermest"
})
--//[ANTI-LAG MAIN]\\--
local function changeTexturesAndMaterials()
	--//[]\\--
	local texturesDestroyed = true
	local materialsChanged = true
	--//[REMOVE TEXTURE AND CHANGE MATERIAL]\\--
	for _, descendant in pairs(game.Workspace:GetDescendants()) do
		--//[TEXTURE]\\--
		if descendant.ClassName == "Texture" then
			descendant:Destroy()
			print("DESTROYED TEXTURE")
		--//[MATERIAL]\\--
		elseif descendant:IsA("Part") then
			if descendant.Material ~= Enum.Material.SmoothPlastic then
				descendant.Material = Enum.Material.SmoothPlastic
				print("CHANGED MATERIAL")
				materialsChanged = true
			end
		end
	end

	if texturesDestroyed and not allTexturesDestroyed then
		allTexturesDestroyed = true
		print("All textures have been destroyed.")
	end
	
	if materialsChanged and not allMaterialsChanged then
		allMaterialsChanged = true
		print("All materials have been changed to SmoothPlastic.")
	end
end
--//[MAIN LOOP]\\--
while true do
	warn("Script is running...")

	changeTexturesAndMaterials()

	if allTexturesDestroyed and allMaterialsChanged then
		break
	end

	wait(0.25)
end
--//[END OF SCRIPT]\\--
