--[[ 
    K        
   / \
  /   \
 /     \
|   |   |
|   |   |
 \     /
  \   /   
    E
    S
    T
]]

local printc = {
	"    K      ",
	"   / \\    ",
	"  /   \\   ",
	" /     \\  ",
	"|   |   |  ",
	"|   |   |  ",
	" \\     /  ",
	"  \\   /   ",
	"    E      ",
	"    S      ",
	"    T      "
}

for _, line in ipairs(printc) do
	print(line)
end

--//[START OF MAIN SCRIPT]\\--

--//[BOOLEAN TO BREAK LOOP]\\--
local allTexturesDestroyed = false
local allMaterialsChanged = false

--//[WAIT TILL GAME IS LOADED]\\--
if (not game:IsLoaded()) then
	game.Loaded:Wait();
	wait(1.5)
end

--//[CREDIT]\\--
game.StarterGui:SetCore("SendNotification", {
	Title = "Anti-lag";
	Text = "Made by Kaermest"
})

--//[ANTI-LAG FUNCTIONALITY]\\--
local function changeTexturesAndMaterials()
	local texturesDestroyed = true
	local materialsChanged = true

	for _, descendant in pairs(game.Workspace:GetDescendants()) do
		--//[REMOVE TEXTURE AND CHANGE MATERIAL]\\--
		if descendant:IsA("Texture") then
			descendant:Destroy()
			print("DESTROYED TEXTURE")
		elseif descendant:IsA("Part") then
			if descendant.Material ~= Enum.Material.SmoothPlastic then
				descendant.Material = Enum.Material.SmoothPlastic
				print("CHANGED MATERIAL")
				materialsChanged = true
			end
		end
	end

	if texturesDestroyed and not allTexturesDestroyed then
		allTexturesDestroyed = true
		print("All textures have been destroyed.")
	end
	
	if materialsChanged and not allMaterialsChanged then
		allMaterialsChanged = true
		print("All materials have been changed to SmoothPlastic.")
	end
end

--//[TERRAIN AND LIGHTING SETTINGS TO REDUCE LAG]\\--
local Terrain = workspace:FindFirstChildOfClass('Terrain')
Terrain.WaterWaveSize = 0
Terrain.WaterWaveSpeed = 0
Terrain.WaterReflectance = 0
Terrain.WaterTransparency = 0

local Lighting = game:GetService("Lighting")
Lighting.GlobalShadows = false
Lighting.FogEnd = 9e9
settings().Rendering.QualityLevel = 1

--//[CHANGE PART MATERIALS, REMOVE DECALS, PARTICLES, AND EFFECTS]\\--
for i, v in pairs(game:GetDescendants()) do
	if v:IsA("Part") or v:IsA("UnionOperation") or v:IsA("MeshPart") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
		v.Material = "Plastic"
		v.Reflectance = 0
	elseif v:IsA("Decal") then
		v.Transparency = 1
	elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
		v.Lifetime = NumberRange.new(0)
	elseif v:IsA("Explosion") then
		v.BlastPressure = 1
		v.BlastRadius = 1
	end
end

--//[DISABLE POST-PROCESSING EFFECTS IN LIGHTING]\\--
for i, v in pairs(Lighting:GetDescendants()) do
	if v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("BloomEffect") or v:IsA("DepthOfFieldEffect") then
		v.Enabled = false
	end
end

--//[REMOVE UNNECESSARY OBJECTS WHEN ADDED TO WORKSPACE]\\--
workspace.DescendantAdded:Connect(function(child)
	task.spawn(function()
		if child:IsA('ForceField') then
			RunService.Heartbeat:Wait()
			child:Destroy()
		elseif child:IsA('Sparkles') then
			RunService.Heartbeat:Wait()
			child:Destroy()
		elseif child:IsA('Smoke') or child:IsA('Fire') then
			RunService.Heartbeat:Wait()
			child:Destroy()
		end
	end)
end)

--//[ANTI-AFK COMMAND]\\--
addcmd('antiafk', {'antiidle'}, function(args, speaker)
	local GC = getconnections or get_signal_cons
	if GC then
		for i,v in pairs(GC(Players.LocalPlayer.Idled)) do
			if v["Disable"] then
				v["Disable"](v)
			elseif v["Disconnect"] then
				v["Disconnect"](v)
			end
		end
	else
		local VirtualUser = cloneref(game:GetService("VirtualUser"))
		Players.LocalPlayer.Idled:Connect(function()
			VirtualUser:CaptureController()
			VirtualUser:ClickButton2(Vector2.new())
		end)
	end
	if not (args[1] and tostring(args[1]) == 'nonotify') then
		notify('Anti Idle','Anti idle is enabled')
	end
end)

--//[DATA LIMIT COMMAND]\\--
addcmd("datalimit", {}, function(args, speaker)
	if tonumber(args[1]) then
		NetworkClient:SetOutgoingKBPSLimit(args[1])
	end
end)

--//[REPLICATION LAG COMMAND]\\--
addcmd("replicationlag", {"backtrack"}, function(args, speaker)
	if tonumber(args[1]) then
		settings():GetService("NetworkSettings").IncomingReplicationLag = args[1]
	end
end)

--//[MAIN LOOP]\\--
while true do
	warn("Script is running...")

	changeTexturesAndMaterials()

	if allTexturesDestroyed and allMaterialsChanged then
		break
	end

	wait(0.25)
end

--//[END OF SCRIPT]\\--
